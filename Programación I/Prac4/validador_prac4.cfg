NUM_PRACTICA = "4"
CREATE_ZIP = False
work = [
        ['ej01.py',
          [
            ProgramTest('hola, buenos días\n1024\n4*2=8\nMala SUERTE\n\n', 'Ve introduciendo cadenas de caracteres, o vacío para acabar...\nNueva cadena: Nueva cadena: Nueva cadena: Nueva cadena: Nueva cadena: Cadenas leídas:\n  Cadena de longitud 17: =>hola, buenos días<=\n  Cadena de longitud 4: =>1024<=\n  Cadena de longitud 5: =>4*2=8<=\n  Cadena de longitud 11: =>Mala SUERTE<=\n'),
            ProgramTest('hola\n\n', 'Ve introduciendo cadenas de caracteres, o vacío para acabar...\nNueva cadena: Nueva cadena: Cadenas leídas:\n  Cadena de longitud 4: =>hola<=\n'),
            ProgramTest('h\no\nl\na\n\n', 'Ve introduciendo cadenas de caracteres, o vacío para acabar...\nNueva cadena: Nueva cadena: Nueva cadena: Nueva cadena: Nueva cadena: Cadenas leídas:\n  Cadena de longitud 1: =>h<=\n  Cadena de longitud 1: =>o<=\n  Cadena de longitud 1: =>l<=\n  Cadena de longitud 1: =>a<=\n'),
            ProgramTest('\n', 'Ve introduciendo cadenas de caracteres, o vacío para acabar...\nNueva cadena: Cadenas leídas:\n')
          ]
        ]
        ,
        ['ej02.py',
          [
            ProgramTest('hola, buenos días\n1024\n4*2=8\nMala SUERTE\n\n', 'Ve introduciendo cadenas de caracteres, o vacío para acabar...\nNueva cadena: Nueva cadena: Nueva cadena: Nueva cadena: Nueva cadena: Cadenas leídas (desde la última hasta la primera):\n  Cadena de longitud 11: =>Mala SUERTE<=\n  Cadena de longitud 5: =>4*2=8<=\n  Cadena de longitud 4: =>1024<=\n  Cadena de longitud 17: =>hola, buenos días<=\n'),
            ProgramTest('hola\n\n', 'Ve introduciendo cadenas de caracteres, o vacío para acabar...\nNueva cadena: Nueva cadena: Cadenas leídas (desde la última hasta la primera):\n  Cadena de longitud 4: =>hola<=\n'),
            ProgramTest('h\no\nl\na\n\n', 'Ve introduciendo cadenas de caracteres, o vacío para acabar...\nNueva cadena: Nueva cadena: Nueva cadena: Nueva cadena: Nueva cadena: Cadenas leídas (desde la última hasta la primera):\n  Cadena de longitud 1: =>a<=\n  Cadena de longitud 1: =>l<=\n  Cadena de longitud 1: =>o<=\n  Cadena de longitud 1: =>h<=\n'),
            ProgramTest('\n', 'Ve introduciendo cadenas de caracteres, o vacío para acabar...\nNueva cadena: Cadenas leídas (desde la última hasta la primera):\n')
          ]
        ]
        ,
        ['ej03.py',
          [
            ProgramTest('25\n33\n202\n7\n14\n0\n1\n-9\n', 'Ve introduciendo números enteros positivos, o un número negativo para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números pares: [202, 14, 0]\nNúmeros impares: [25, 33, 7, 1]\n'),
            ProgramTest('2\n4\n6\n8\n10\n-1\n', 'Ve introduciendo números enteros positivos, o un número negativo para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números pares: [2, 4, 6, 8, 10]\nNúmeros impares: []\n'),
            ProgramTest('1000\n-100\n', 'Ve introduciendo números enteros positivos, o un número negativo para acabar...\nNuevo número: Nuevo número: Números pares: [1000]\nNúmeros impares: []\n'),
            ProgramTest('1\n3\n5\n7\n-1\n', 'Ve introduciendo números enteros positivos, o un número negativo para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números pares: []\nNúmeros impares: [1, 3, 5, 7]\n'),
            ProgramTest('1111\n-20\n', 'Ve introduciendo números enteros positivos, o un número negativo para acabar...\nNuevo número: Nuevo número: Números pares: []\nNúmeros impares: [1111]\n'),
            ProgramTest('-1\n', 'Ve introduciendo números enteros positivos, o un número negativo para acabar...\nNuevo número: Números pares: []\nNúmeros impares: []\n')
          ]
        ]
        ,
        ['ej04.py',
          [
            ProgramTest('11\n-9\n-25\n101\n0\n2\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Cuadrados de los números leídos: [121, 81, 625, 10201, 0, 4]\nNúmeros leídos: [11, -9, -25, 101, 0, 2]\n', functions = [FunctionTestList('leer_lista_enteros', [FunctionTest ((), '11\n-9\n-25\n101\n0\n2\n\n', [11, -9, -25, 101, 0, 2], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '1\n-1\n\n', [1, -1], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '-33\n\n', [-33], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '\n', [], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: ')])]),
            ProgramTest('1\n-1\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Cuadrados de los números leídos: [1, 1]\nNúmeros leídos: [1, -1]\n'),
            ProgramTest('-33\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Cuadrados de los números leídos: [1089]\nNúmeros leídos: [-33]\n'),
            ProgramTest('\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Cuadrados de los números leídos: []\nNúmeros leídos: []\n')
          ]
        ]
        ,
        ['ej05.py',
          [
            ProgramTest('4\n-5\n2\n-6\n-6\n1\n2\n2\n\n7\n1\n6\n0\n0\n-1\n3\n1\n0\n0\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué posición debo eliminar de [4, -5, 2, -6, -6, 1, 2, 2]? ¿Qué posición debo eliminar de [4, -5, 2, -6, -6, 1, 2]? ¿Qué posición debo eliminar de [4, 2, -6, -6, 1, 2]? Posición incorrecta\n¿Qué posición debo eliminar de [4, 2, -6, -6, 1, 2]? ¿Qué posición debo eliminar de [2, -6, -6, 1, 2]? ¿Qué posición debo eliminar de [-6, -6, 1, 2]? Posición incorrecta\n¿Qué posición debo eliminar de [-6, -6, 1, 2]? ¿Qué posición debo eliminar de [-6, -6, 1]? ¿Qué posición debo eliminar de [-6, 1]? ¿Qué posición debo eliminar de [1]? La lista ha quedado vacía\n', functions = [FunctionTestList('leer_lista_enteros', [FunctionTest ((), '11\n-9\n-25\n101\n0\n2\n\n', [11, -9, -25, 101, 0, 2], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '1\n-1\n\n', [1, -1], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '-33\n\n', [-33], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '\n', [], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: ')]), FunctionTestList('borrar_elemento', [FunctionTest (([1,1,1,1],1), '', True, ([1, 1, 1], 1), ''), FunctionTest (([1,2,3],4), '', False, ([1, 2, 3], 4), ''), FunctionTest (([1,2,1,2,1,2],1), '', True, ([1, 1, 2, 1, 2], 1), ''), FunctionTest (([1,2,3],-1), '', False, ([1, 2, 3], -1), ''), FunctionTest (([1,2,3],2), '', True, ([1, 2], 2), ''), FunctionTest (([1,2,3],3), '', False, ([1, 2, 3], 3), ''), FunctionTest (([],1), '', False, ([], 1), ''), FunctionTest (([],0), '', False, ([], 0), ''), FunctionTest (([3,5,9,7,3],-1), '', False, ([3, 5, 9, 7, 3], -1), ''), FunctionTest (([100,100],10), '', False, ([100, 100], 10), '')])]),
            ProgramTest('1\n-2\n3\n\n-1\n0\n-1\n0\n-1\n0\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué posición debo eliminar de [1, -2, 3]? Posición incorrecta\n¿Qué posición debo eliminar de [1, -2, 3]? ¿Qué posición debo eliminar de [-2, 3]? Posición incorrecta\n¿Qué posición debo eliminar de [-2, 3]? ¿Qué posición debo eliminar de [3]? Posición incorrecta\n¿Qué posición debo eliminar de [3]? La lista ha quedado vacía\n'),
            ProgramTest('1\n-2\n3\n\n-1\n2\n-1\n1\n-1\n0\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué posición debo eliminar de [1, -2, 3]? Posición incorrecta\n¿Qué posición debo eliminar de [1, -2, 3]? ¿Qué posición debo eliminar de [1, -2]? Posición incorrecta\n¿Qué posición debo eliminar de [1, -2]? ¿Qué posición debo eliminar de [1]? Posición incorrecta\n¿Qué posición debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('0\n1\n2\n3\n4\n5\n\n6\n7\n5\n5\n0\n4\n3\n2\n0\n0\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué posición debo eliminar de [0, 1, 2, 3, 4, 5]? Posición incorrecta\n¿Qué posición debo eliminar de [0, 1, 2, 3, 4, 5]? Posición incorrecta\n¿Qué posición debo eliminar de [0, 1, 2, 3, 4, 5]? ¿Qué posición debo eliminar de [0, 1, 2, 3, 4]? Posición incorrecta\n¿Qué posición debo eliminar de [0, 1, 2, 3, 4]? ¿Qué posición debo eliminar de [1, 2, 3, 4]? Posición incorrecta\n¿Qué posición debo eliminar de [1, 2, 3, 4]? ¿Qué posición debo eliminar de [1, 2, 3]? ¿Qué posición debo eliminar de [1, 2]? ¿Qué posición debo eliminar de [2]? La lista ha quedado vacía\n'),
            ProgramTest('\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: La lista ha quedado vacía\n')
          ]
        ]
        ,
        ['ej06.py',
          [
            ProgramTest('4\n-5\n2\n-6\n-6\n1\n2\n2\n\n7\n1\n2\n2\n2\n-6\n-5\n4\n2\n-6\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [4, -5, 2, -6, -6, 1, 2, 2]? Número no encontrado\n¿Qué número debo eliminar de [4, -5, 2, -6, -6, 1, 2, 2]? ¿Qué número debo eliminar de [4, -5, 2, -6, -6, 2, 2]? ¿Qué número debo eliminar de [4, -5, -6, -6, 2, 2]? ¿Qué número debo eliminar de [4, -5, -6, -6, 2]? ¿Qué número debo eliminar de [4, -5, -6, -6]? ¿Qué número debo eliminar de [4, -5, -6]? ¿Qué número debo eliminar de [4, -6]? ¿Qué número debo eliminar de [-6]? Número no encontrado\n¿Qué número debo eliminar de [-6]? La lista ha quedado vacía\n', functions = [FunctionTestList('leer_lista_enteros', [FunctionTest ((), '11\n-9\n-25\n101\n0\n2\n\n', [11, -9, -25, 101, 0, 2], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '1\n-1\n\n', [1, -1], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '-33\n\n', [-33], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '\n', [], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: ')]), FunctionTestList('borrar_elemento', [FunctionTest (([1,1,1,1],1), '', True, ([1, 1, 1], 1), ''), FunctionTest (([1,2,3],4), '', False, ([1, 2, 3], 4), ''), FunctionTest (([1,2,1,2,1,2],1), '', True, ([2, 1, 2, 1, 2], 1), ''), FunctionTest (([1,2,3],1), '', True, ([2, 3], 1), ''), FunctionTest (([1,2,3],2), '', True, ([1, 3], 2), ''), FunctionTest (([1,2,3],3), '', True, ([1, 2], 3), ''), FunctionTest (([],15), '', False, ([], 15), ''), FunctionTest (([20,20,5,20,20,20,4,20],20), '', True, ([20, 5, 20, 20, 20, 4, 20], 20), ''), FunctionTest (([3,5,9,7,3],3), '', True, ([5, 9, 7, 3], 3), ''), FunctionTest (([100,100],1000), '', False, ([100, 100], 1000), '')])]),
            ProgramTest('1\n2\n3\n\n-1\n1\n-1\n2\n-1\n3\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 3]? ¿Qué número debo eliminar de [2, 3]? Número no encontrado\n¿Qué número debo eliminar de [2, 3]? ¿Qué número debo eliminar de [3]? Número no encontrado\n¿Qué número debo eliminar de [3]? La lista ha quedado vacía\n'),
            ProgramTest('1\n2\n3\n\n-1\n3\n-1\n2\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 3]? ¿Qué número debo eliminar de [1, 2]? Número no encontrado\n¿Qué número debo eliminar de [1, 2]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n2\n3\n\n-1\n2\n-1\n3\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 3]? ¿Qué número debo eliminar de [1, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 3]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n\n-1\n5\n4\n3\n2\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n1\n1\n\n-1\n1\n-1\n1\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 1, 1]? Número no encontrado\n¿Qué número debo eliminar de [1, 1, 1]? ¿Qué número debo eliminar de [1, 1]? Número no encontrado\n¿Qué número debo eliminar de [1, 1]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n2\n1\n\n-1\n1\n-1\n2\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 1]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 1]? ¿Qué número debo eliminar de [2, 1]? Número no encontrado\n¿Qué número debo eliminar de [2, 1]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('10\n5\n5\n-7\n42\n5\n10\n\n0\n1\n-7\n5\n5\n10\n10\n5\n24\n42\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [10, 5, 5, -7, 42, 5, 10]? Número no encontrado\n¿Qué número debo eliminar de [10, 5, 5, -7, 42, 5, 10]? Número no encontrado\n¿Qué número debo eliminar de [10, 5, 5, -7, 42, 5, 10]? ¿Qué número debo eliminar de [10, 5, 5, 42, 5, 10]? ¿Qué número debo eliminar de [10, 5, 42, 5, 10]? ¿Qué número debo eliminar de [10, 42, 5, 10]? ¿Qué número debo eliminar de [42, 5, 10]? ¿Qué número debo eliminar de [42, 5]? ¿Qué número debo eliminar de [42]? Número no encontrado\n¿Qué número debo eliminar de [42]? La lista ha quedado vacía\n'),
            ProgramTest('-10\n-30\n-30\n-10\n0\n\n0\n-10\n-10\n-30\n-30\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [-10, -30, -30, -10, 0]? ¿Qué número debo eliminar de [-10, -30, -30, -10]? ¿Qué número debo eliminar de [-30, -30, -10]? ¿Qué número debo eliminar de [-30, -30]? ¿Qué número debo eliminar de [-30]? La lista ha quedado vacía\n'),
            ProgramTest('\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: La lista ha quedado vacía\n')
          ]
        ]
        ,
        ['ej07.py',
          [
            ProgramTest('4\n-5\n2\n-6\n-6\n1\n2\n2\n\n7\n1\n2\n2\n2\n-6\n-5\n4\n2\n-6\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [4, -5, 2, -6, -6, 1, 2, 2]? Número no encontrado\n¿Qué número debo eliminar de [4, -5, 2, -6, -6, 1, 2, 2]? ¿Qué número debo eliminar de [4, -5, 2, -6, -6, 2, 2]? ¿Qué número debo eliminar de [4, -5, 2, -6, -6, 2]? ¿Qué número debo eliminar de [4, -5, 2, -6, -6]? ¿Qué número debo eliminar de [4, -5, -6, -6]? ¿Qué número debo eliminar de [4, -5, -6]? ¿Qué número debo eliminar de [4, -6]? ¿Qué número debo eliminar de [-6]? Número no encontrado\n¿Qué número debo eliminar de [-6]? La lista ha quedado vacía\n', functions = [FunctionTestList('leer_lista_enteros', [FunctionTest ((), '11\n-9\n-25\n101\n0\n2\n\n', [11, -9, -25, 101, 0, 2], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '1\n-1\n\n', [1, -1], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '-33\n\n', [-33], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '\n', [], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: ')]), FunctionTestList('borrar_elemento', [FunctionTest (([1,1,1,1],1), '', True, ([1, 1, 1], 1), ''), FunctionTest (([1,2,3],4), '', False, ([1, 2, 3], 4), ''), FunctionTest (([1,2,1,2,1,2],1), '', True, ([1, 2, 1, 2, 2], 1), ''), FunctionTest (([1,2,3],1), '', True, ([2, 3], 1), ''), FunctionTest (([1,2,3],2), '', True, ([1, 3], 2), ''), FunctionTest (([1,2,3],3), '', True, ([1, 2], 3), ''), FunctionTest (([],15), '', False, ([], 15), ''), FunctionTest (([20,20,5,20,20,20,4,20],20), '', True, ([20, 20, 5, 20, 20, 20, 4], 20), ''), FunctionTest (([3,5,9,7,3],3), '', True, ([3, 5, 9, 7], 3), ''), FunctionTest (([100,100],1000), '', False, ([100, 100], 1000), '')])]),
            ProgramTest('1\n2\n3\n\n-1\n1\n-1\n2\n-1\n3\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 3]? ¿Qué número debo eliminar de [2, 3]? Número no encontrado\n¿Qué número debo eliminar de [2, 3]? ¿Qué número debo eliminar de [3]? Número no encontrado\n¿Qué número debo eliminar de [3]? La lista ha quedado vacía\n'),
            ProgramTest('1\n2\n3\n\n-1\n3\n-1\n2\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 3]? ¿Qué número debo eliminar de [1, 2]? Número no encontrado\n¿Qué número debo eliminar de [1, 2]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n2\n3\n\n-1\n2\n-1\n3\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 3]? ¿Qué número debo eliminar de [1, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 3]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n\n-1\n5\n4\n3\n2\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n1\n1\n\n-1\n1\n-1\n1\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 1, 1]? Número no encontrado\n¿Qué número debo eliminar de [1, 1, 1]? ¿Qué número debo eliminar de [1, 1]? Número no encontrado\n¿Qué número debo eliminar de [1, 1]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n2\n1\n\n-1\n1\n-1\n2\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 1]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 1]? ¿Qué número debo eliminar de [1, 2]? Número no encontrado\n¿Qué número debo eliminar de [1, 2]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('10\n5\n5\n-7\n42\n5\n10\n\n0\n1\n-7\n5\n5\n10\n10\n5\n24\n42\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [10, 5, 5, -7, 42, 5, 10]? Número no encontrado\n¿Qué número debo eliminar de [10, 5, 5, -7, 42, 5, 10]? Número no encontrado\n¿Qué número debo eliminar de [10, 5, 5, -7, 42, 5, 10]? ¿Qué número debo eliminar de [10, 5, 5, 42, 5, 10]? ¿Qué número debo eliminar de [10, 5, 5, 42, 10]? ¿Qué número debo eliminar de [10, 5, 42, 10]? ¿Qué número debo eliminar de [10, 5, 42]? ¿Qué número debo eliminar de [5, 42]? ¿Qué número debo eliminar de [42]? Número no encontrado\n¿Qué número debo eliminar de [42]? La lista ha quedado vacía\n'),
            ProgramTest('-10\n-30\n-30\n-10\n0\n\n0\n-10\n-10\n-30\n-30\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [-10, -30, -30, -10, 0]? ¿Qué número debo eliminar de [-10, -30, -30, -10]? ¿Qué número debo eliminar de [-10, -30, -30]? ¿Qué número debo eliminar de [-30, -30]? ¿Qué número debo eliminar de [-30]? La lista ha quedado vacía\n'),
            ProgramTest('\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: La lista ha quedado vacía\n')
          ]
        ]
        ,
        ['ej08.py',
          [
            ProgramTest('4\n-5\n2\n-6\n-6\n1\n2\n2\n\n7\n1\n2\n2\n-6\n-5\n4\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [4, -5, 2, -6, -6, 1, 2, 2]? Número no encontrado\n¿Qué número debo eliminar de [4, -5, 2, -6, -6, 1, 2, 2]? ¿Qué número debo eliminar de [4, -5, 2, -6, -6, 2, 2]? ¿Qué número debo eliminar de [4, -5, -6, -6]? Número no encontrado\n¿Qué número debo eliminar de [4, -5, -6, -6]? ¿Qué número debo eliminar de [4, -5]? ¿Qué número debo eliminar de [4]? La lista ha quedado vacía\n', functions = [FunctionTestList('leer_lista_enteros', [FunctionTest ((), '11\n-9\n-25\n101\n0\n2\n\n', [11, -9, -25, 101, 0, 2], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '1\n-1\n\n', [1, -1], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '-33\n\n', [-33], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '\n', [], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: ')]), FunctionTestList('borrar_elemento', [FunctionTest (([1,1,1,1],1), '', True, ([], 1), ''), FunctionTest (([1,2,3],4), '', False, ([1, 2, 3], 4), ''), FunctionTest (([1,2,1,2,1,2],1), '', True, ([2, 2, 2], 1), ''), FunctionTest (([1,2,3],1), '', True, ([2, 3], 1), ''), FunctionTest (([1,2,3],2), '', True, ([1, 3], 2), ''), FunctionTest (([1,2,3],3), '', True, ([1, 2], 3), ''), FunctionTest (([],15), '', False, ([], 15), ''), FunctionTest (([20,20,5,20,20,20,4,20],20), '', True, ([5, 4], 20), ''), FunctionTest (([3,5,9,7,3],3), '', True, ([5, 9, 7], 3), ''), FunctionTest (([100,100],1000), '', False, ([100, 100], 1000), '')])]),
            ProgramTest('1\n2\n3\n\n-1\n1\n-1\n2\n-1\n3\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 3]? ¿Qué número debo eliminar de [2, 3]? Número no encontrado\n¿Qué número debo eliminar de [2, 3]? ¿Qué número debo eliminar de [3]? Número no encontrado\n¿Qué número debo eliminar de [3]? La lista ha quedado vacía\n'),
            ProgramTest('1\n2\n3\n\n-1\n3\n-1\n2\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 3]? ¿Qué número debo eliminar de [1, 2]? Número no encontrado\n¿Qué número debo eliminar de [1, 2]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n2\n3\n\n-1\n2\n-1\n3\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 3]? ¿Qué número debo eliminar de [1, 3]? Número no encontrado\n¿Qué número debo eliminar de [1, 3]? ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n\n-1\n5\n4\n3\n2\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? Número no encontrado\n¿Qué número debo eliminar de [1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n1\n1\n\n-1\n1\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 1, 1]? Número no encontrado\n¿Qué número debo eliminar de [1, 1, 1]? La lista ha quedado vacía\n'),
            ProgramTest('1\n2\n1\n\n-1\n1\n-1\n1\n2\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [1, 2, 1]? Número no encontrado\n¿Qué número debo eliminar de [1, 2, 1]? ¿Qué número debo eliminar de [2]? Número no encontrado\n¿Qué número debo eliminar de [2]? Número no encontrado\n¿Qué número debo eliminar de [2]? La lista ha quedado vacía\n'),
            ProgramTest('10\n5\n5\n-7\n42\n5\n10\n\n0\n1\n-7\n5\n5\n10\n10\n5\n24\n42\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [10, 5, 5, -7, 42, 5, 10]? Número no encontrado\n¿Qué número debo eliminar de [10, 5, 5, -7, 42, 5, 10]? Número no encontrado\n¿Qué número debo eliminar de [10, 5, 5, -7, 42, 5, 10]? ¿Qué número debo eliminar de [10, 5, 5, 42, 5, 10]? ¿Qué número debo eliminar de [10, 42, 10]? Número no encontrado\n¿Qué número debo eliminar de [10, 42, 10]? ¿Qué número debo eliminar de [42]? Número no encontrado\n¿Qué número debo eliminar de [42]? Número no encontrado\n¿Qué número debo eliminar de [42]? Número no encontrado\n¿Qué número debo eliminar de [42]? La lista ha quedado vacía\n'),
            ProgramTest('-10\n-30\n-30\n-10\n0\n\n0\n-10\n-30\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ¿Qué número debo eliminar de [-10, -30, -30, -10, 0]? ¿Qué número debo eliminar de [-10, -30, -30, -10]? ¿Qué número debo eliminar de [-30, -30]? La lista ha quedado vacía\n'),
            ProgramTest('\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: La lista ha quedado vacía\n')
          ]
        ]
        ,
        ['ej09.py',
          [
            ProgramTest('2\n8\n2\n-10\n-15\n5\n5\n0\n\n8\n-8\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [2, 8, 2, -10, -15, 5, 5, 0]\nVe contestando con números enteros, o con una cadena vacía para acabar...\n¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas?   2 + -10 = -8\n¿Qué suma he de buscar en dos posiciones consecutivas?   2 + 8 = 10\n  8 + 2 = 10\n  5 + 5 = 10\n¿Qué suma he de buscar en dos posiciones consecutivas? ¡Adiós!\n', functions = [FunctionTestList('leer_lista_enteros', [FunctionTest ((), '11\n-9\n-25\n101\n0\n2\n\n', [11, -9, -25, 101, 0, 2], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '1\n-1\n\n', [1, -1], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '-33\n\n', [-33], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '\n', [], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: ')])]),
            ProgramTest('2\n\n8\n-8\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Lista leída: [2]\nVe contestando con números enteros, o con una cadena vacía para acabar...\n¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¡Adiós!\n'),
            ProgramTest('\n8\n-8\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Lista leída: []\nVe contestando con números enteros, o con una cadena vacía para acabar...\n¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¡Adiós!\n'),
            ProgramTest('5\n6\n5\n6\n5\n\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [5, 6, 5, 6, 5]\nVe contestando con números enteros, o con una cadena vacía para acabar...\n¿Qué suma he de buscar en dos posiciones consecutivas? ¡Adiós!\n'),
            ProgramTest('6\n0\n6\n3\n4\n7\n0\n0\n9\n8\n1\n5\n4\n5\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [6, 0, 6, 3, 4, 7, 0, 0, 9, 8, 1, 5, 4, 5]\nVe contestando con números enteros, o con una cadena vacía para acabar...\n¿Qué suma he de buscar en dos posiciones consecutivas?   0 + 0 = 0\n¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas?   6 + 0 = 6\n  0 + 6 = 6\n  1 + 5 = 6\n¿Qué suma he de buscar en dos posiciones consecutivas?   3 + 4 = 7\n  7 + 0 = 7\n¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas?   6 + 3 = 9\n  0 + 9 = 9\n  8 + 1 = 9\n  5 + 4 = 9\n  4 + 5 = 9\n¿Qué suma he de buscar en dos posiciones consecutivas? ¿Qué suma he de buscar en dos posiciones consecutivas? ¡Adiós!\n'),
            ProgramTest('\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Lista leída: []\nVe contestando con números enteros, o con una cadena vacía para acabar...\n¿Qué suma he de buscar en dos posiciones consecutivas? ¡Adiós!\n')
          ]
        ]
        ,
        ['ej10.py',
          [
            ProgramTest('5\n0\n-4\n3\n-7\n1\n-7\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [5, 0, -4, 3, -7, 1, -7]\nModificada:  [-7, 0, -4, 3, 5, 1, -7]\n', functions = [FunctionTestList('leer_lista_enteros', [FunctionTest ((), '11\n-9\n-25\n101\n0\n2\n\n', [11, -9, -25, 101, 0, 2], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '1\n-1\n\n', [1, -1], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '-33\n\n', [-33], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '\n', [], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: ')]), FunctionTestList('posición_menor', [FunctionTest (([1,2,3],), '', 0, ([1, 2, 3],), ''), FunctionTest (([2,1,3],), '', 1, ([2, 1, 3],), ''), FunctionTest (([3,2,1],), '', 2, ([3, 2, 1],), ''), FunctionTest (([1,2,1],), '', 0, ([1, 2, 1],), ''), FunctionTest (([2,2,2],), '', 0, ([2, 2, 2],), ''), FunctionTest (([1,2,3,4,5,6,1],), '', 0, ([1, 2, 3, 4, 5, 6, 1],), '')]), FunctionTestList('intercambiar', [FunctionTest (([1,2,3,4],0,1), '', None, ([2, 1, 3, 4], 0, 1), ''), FunctionTest (([1,2,3,4],0,2), '', None, ([3, 2, 1, 4], 0, 2), ''), FunctionTest (([1,2,3,4],1,0), '', None, ([2, 1, 3, 4], 1, 0), ''), FunctionTest (([1,2,3,4],1,3), '', None, ([1, 4, 3, 2], 1, 3), ''), FunctionTest (([1,2,3,4],2,2), '', None, ([1, 2, 3, 4], 2, 2), '')])]),
            ProgramTest('\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Lista leída: []\nModificada:  []\n'),
            ProgramTest('5\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Lista leída: [5]\nModificada:  [5]\n'),
            ProgramTest('-9\n0\n-4\n3\n-7\n1\n-7\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [-9, 0, -4, 3, -7, 1, -7]\nModificada:  [-9, 0, -4, 3, -7, 1, -7]\n'),
            ProgramTest('5\n0\n-4\n3\n-7\n1\n-9\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [5, 0, -4, 3, -7, 1, -9]\nModificada:  [-9, 0, -4, 3, -7, 1, 5]\n'),
            ProgramTest('10\n10\n20\n30\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [10, 10, 20, 30]\nModificada:  [10, 10, 20, 30]\n'),
            ProgramTest('10\n20\n10\n30\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [10, 20, 10, 30]\nModificada:  [10, 20, 10, 30]\n'),
            ProgramTest('10\n10\n10\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [10, 10, 10, 10]\nModificada:  [10, 10, 10, 10]\n'),
            ProgramTest('10\n20\n20\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [10, 20, 20, 10]\nModificada:  [10, 20, 20, 10]\n'),
            ProgramTest('15\n10\n20\n30\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [15, 10, 20, 30]\nModificada:  [10, 15, 20, 30]\n'),
            ProgramTest('25\n20\n10\n30\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [25, 20, 10, 30]\nModificada:  [10, 20, 25, 30]\n'),
            ProgramTest('35\n10\n10\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [35, 10, 10, 10]\nModificada:  [10, 35, 10, 10]\n'),
            ProgramTest('45\n20\n20\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [45, 20, 20, 10]\nModificada:  [10, 20, 20, 45]\n')
          ]
        ]
        ,
        ['ej11.py',
          [
            ProgramTest('5\n0\n-4\n3\n-7\n1\n-7\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [5, 0, -4, 3, -7, 1, -7]\nLista ordenada: [-7, -7, -4, 0, 1, 3, 5]\n', functions = [FunctionTestList('leer_lista_enteros', [FunctionTest ((), '11\n-9\n-25\n101\n0\n2\n\n', [11, -9, -25, 101, 0, 2], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '1\n-1\n\n', [1, -1], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '-33\n\n', [-33], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '\n', [], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: ')]), FunctionTestList('posición_menor', [FunctionTest (([1,2,3],0), '', 0, ([1, 2, 3], 0), ''), FunctionTest (([1,2,3],1), '', 1, ([1, 2, 3], 1), ''), FunctionTest (([2,1,3],1), '', 1, ([2, 1, 3], 1), ''), FunctionTest (([2,1,3],2), '', 2, ([2, 1, 3], 2), ''), FunctionTest (([3,2,1],1), '', 2, ([3, 2, 1], 1), ''), FunctionTest (([1,2,1],2), '', 2, ([1, 2, 1], 2), ''), FunctionTest (([2,2,2],1), '', 1, ([2, 2, 2], 1), ''), FunctionTest (([1,2,3,4,5,6,1],3), '', 6, ([1, 2, 3, 4, 5, 6, 1], 3), '')]), FunctionTestList('intercambiar', [FunctionTest (([1,2,3,4],0,1), '', None, ([2, 1, 3, 4], 0, 1), ''), FunctionTest (([1,2,3,4],0,2), '', None, ([3, 2, 1, 4], 0, 2), ''), FunctionTest (([1,2,3,4],1,0), '', None, ([2, 1, 3, 4], 1, 0), ''), FunctionTest (([1,2,3,4],1,3), '', None, ([1, 4, 3, 2], 1, 3), ''), FunctionTest (([1,2,3,4],2,2), '', None, ([1, 2, 3, 4], 2, 2), '')]), FunctionTestList('ordenar_lista', [FunctionTest (([5,0,-4,3,-7,1,-7],), '', None, ([-7, -7, -4, 0, 1, 3, 5],), ''), FunctionTest (([],), '', None, ([],), ''), FunctionTest (([5],), '', None, ([5],), ''), FunctionTest (([-9,0,-4,3,-7,1,-7],), '', None, ([-9, -7, -7, -4, 0, 1, 3],), ''), FunctionTest (([5,0,-4,3,-7,1,-9],), '', None, ([-9, -7, -4, 0, 1, 3, 5],), ''), FunctionTest (([10,10,20,30],), '', None, ([10, 10, 20, 30],), ''), FunctionTest (([10,20,10,30],), '', None, ([10, 10, 20, 30],), ''), FunctionTest (([10,10,10,10],), '', None, ([10, 10, 10, 10],), ''), FunctionTest (([10,20,20,10],), '', None, ([10, 10, 20, 20],), ''), FunctionTest (([15,10,20,30],), '', None, ([10, 15, 20, 30],), ''), FunctionTest (([25,20,10,30],), '', None, ([10, 20, 25, 30],), ''), FunctionTest (([35,10,10,10],), '', None, ([10, 10, 10, 35],), ''), FunctionTest (([45,20,20,10],), '', None, ([10, 20, 20, 45],), ''), FunctionTest (([-7,-7,-4,0,1,3,5],), '', None, ([-7, -7, -4, 0, 1, 3, 5],), ''), FunctionTest (([5,3,1,0,-4,-7,-7],), '', None, ([-7, -7, -4, 0, 1, 3, 5],), ''), FunctionTest (([20,50,40,30,10],), '', None, ([10, 20, 30, 40, 50],), '')])]),
            ProgramTest('\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Lista leída: []\nLista ordenada: []\n'),
            ProgramTest('5\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Lista leída: [5]\nLista ordenada: [5]\n'),
            ProgramTest('-9\n0\n-4\n3\n-7\n1\n-7\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [-9, 0, -4, 3, -7, 1, -7]\nLista ordenada: [-9, -7, -7, -4, 0, 1, 3]\n'),
            ProgramTest('5\n0\n-4\n3\n-7\n1\n-9\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [5, 0, -4, 3, -7, 1, -9]\nLista ordenada: [-9, -7, -4, 0, 1, 3, 5]\n'),
            ProgramTest('10\n10\n20\n30\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [10, 10, 20, 30]\nLista ordenada: [10, 10, 20, 30]\n'),
            ProgramTest('10\n20\n10\n30\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [10, 20, 10, 30]\nLista ordenada: [10, 10, 20, 30]\n'),
            ProgramTest('10\n10\n10\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [10, 10, 10, 10]\nLista ordenada: [10, 10, 10, 10]\n'),
            ProgramTest('10\n20\n20\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [10, 20, 20, 10]\nLista ordenada: [10, 10, 20, 20]\n'),
            ProgramTest('15\n10\n20\n30\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [15, 10, 20, 30]\nLista ordenada: [10, 15, 20, 30]\n'),
            ProgramTest('25\n20\n10\n30\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [25, 20, 10, 30]\nLista ordenada: [10, 20, 25, 30]\n'),
            ProgramTest('35\n10\n10\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [35, 10, 10, 10]\nLista ordenada: [10, 10, 10, 35]\n'),
            ProgramTest('45\n20\n20\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [45, 20, 20, 10]\nLista ordenada: [10, 20, 20, 45]\n'),
            ProgramTest('-7\n-7\n-4\n0\n1\n3\n5\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [-7, -7, -4, 0, 1, 3, 5]\nLista ordenada: [-7, -7, -4, 0, 1, 3, 5]\n'),
            ProgramTest('5\n3\n1\n0\n-4\n-7\n-7\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [5, 3, 1, 0, -4, -7, -7]\nLista ordenada: [-7, -7, -4, 0, 1, 3, 5]\n'),
            ProgramTest('20\n50\n40\n30\n10\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Lista leída: [20, 50, 40, 30, 10]\nLista ordenada: [10, 20, 30, 40, 50]\n')
          ]
        ]
        ,
        ['ej12.py',
          [
            ProgramTest('4\n15\n0\n0\n-3\n15\n77\n-3\n15\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 12): [15, 0, -3]\nTodos los números leídos: [4, 15, 0, 0, -3, 15, 77, -3, 15]\n', functions = [FunctionTestList('leer_lista_enteros', [FunctionTest ((), '11\n-9\n-25\n101\n0\n2\n\n', [11, -9, -25, 101, 0, 2], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '1\n-1\n\n', [1, -1], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '-33\n\n', [-33], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: ')]), FunctionTestList('leer_lista_enteros', [FunctionTest ((), '\n', [], (), 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: ')]), FunctionTestList('repetidos_lista', [FunctionTest (([4,15,0,0,-3,15,77,-3,15],), '', [15, 0, -3], ([4, 15, 0, 0, -3, 15, 77, -3, 15],), ''), FunctionTest (([1,1,1,1,1,1,1,1,1],), '', [1], ([1, 1, 1, 1, 1, 1, 1, 1, 1],), ''), FunctionTest (([32,32,32],), '', [32], ([32, 32, 32],), ''), FunctionTest (([1,2,3,4,5,6,7,8,9],), '', [], ([1, 2, 3, 4, 5, 6, 7, 8, 9],), ''), FunctionTest (([21,32,13,24,55,96,17,18,9],), '', [], ([21, 32, 13, 24, 55, 96, 17, 18, 9],), ''), FunctionTest (([1],), '', [], ([1],), ''), FunctionTest (([30,-3],), '', [], ([30, -3],), ''), FunctionTest (([-3,-3],), '', [-3], ([-3, -3],), ''), FunctionTest (([-66],), '', [], ([-66],), ''), FunctionTest (([2,7,1,8,2,8,1,8,2,8,4,5,9],), '', [2, 1, 8], ([2, 7, 1, 8, 2, 8, 1, 8, 2, 8, 4, 5, 9],), ''), FunctionTest (([7,4,6,6,1,0,6,3,5,7],), '', [7, 6], ([7, 4, 6, 6, 1, 0, 6, 3, 5, 7],), ''), FunctionTest (([1,2,3,4,5],), '', [], ([1, 2, 3, 4, 5],), ''), FunctionTest (([11,22,33,33,22,11],), '', [11, 22, 33], ([11, 22, 33, 33, 22, 11],), ''), FunctionTest (([111,222,4,5,222,111,6,7],), '', [111, 222], ([111, 222, 4, 5, 222, 111, 6, 7],), ''), FunctionTest (([],), '', [], ([],), '')]), FunctionTestList('suma_lista', [FunctionTest (([4,15,0,0,-3,15,77,-3,15],), '', 120, ([4, 15, 0, 0, -3, 15, 77, -3, 15],), ''), FunctionTest (([1,1,1,1,1,1,1,1,1],), '', 9, ([1, 1, 1, 1, 1, 1, 1, 1, 1],), ''), FunctionTest (([32,32,32],), '', 96, ([32, 32, 32],), ''), FunctionTest (([1,2,3,4,5,6,7,8,9],), '', 45, ([1, 2, 3, 4, 5, 6, 7, 8, 9],), ''), FunctionTest (([21,32,13,24,55,96,17,18,9],), '', 285, ([21, 32, 13, 24, 55, 96, 17, 18, 9],), ''), FunctionTest (([1],), '', 1, ([1],), ''), FunctionTest (([30,-3],), '', 27, ([30, -3],), ''), FunctionTest (([-3,-3],), '', -6, ([-3, -3],), ''), FunctionTest (([-66],), '', -66, ([-66],), ''), FunctionTest (([2,7,1,8,2,8,1,8,2,8,4,5,9],), '', 65, ([2, 7, 1, 8, 2, 8, 1, 8, 2, 8, 4, 5, 9],), ''), FunctionTest (([7,4,6,6,1,0,6,3,5,7],), '', 45, ([7, 4, 6, 6, 1, 0, 6, 3, 5, 7],), ''), FunctionTest (([1,2,3,4,5],), '', 15, ([1, 2, 3, 4, 5],), ''), FunctionTest (([11,22,33,33,22,11],), '', 132, ([11, 22, 33, 33, 22, 11],), ''), FunctionTest (([111,222,4,5,222,111,6,7],), '', 688, ([111, 222, 4, 5, 222, 111, 6, 7],), ''), FunctionTest (([],), '', 0, ([],), '')])]),
            ProgramTest('1\n1\n1\n1\n1\n1\n1\n1\n1\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 1): [1]\nTodos los números leídos: [1, 1, 1, 1, 1, 1, 1, 1, 1]\n'),
            ProgramTest('32\n32\n32\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 32): [32]\nTodos los números leídos: [32, 32, 32]\n'),
            ProgramTest('1\n2\n3\n4\n5\n6\n7\n8\n9\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 0): []\nTodos los números leídos: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n'),
            ProgramTest('21\n32\n13\n24\n55\n96\n17\n18\n9\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 0): []\nTodos los números leídos: [21, 32, 13, 24, 55, 96, 17, 18, 9]\n'),
            ProgramTest('1\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Números leídos más de una vez (suman 0): []\nTodos los números leídos: [1]\n'),
            ProgramTest('30\n-3\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 0): []\nTodos los números leídos: [30, -3]\n'),
            ProgramTest('-3\n-3\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman -3): [-3]\nTodos los números leídos: [-3, -3]\n'),
            ProgramTest('-66\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Números leídos más de una vez (suman 0): []\nTodos los números leídos: [-66]\n'),
            ProgramTest('2\n7\n1\n8\n2\n8\n1\n8\n2\n8\n4\n5\n9\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 11): [2, 1, 8]\nTodos los números leídos: [2, 7, 1, 8, 2, 8, 1, 8, 2, 8, 4, 5, 9]\n'),
            ProgramTest('7\n4\n6\n6\n1\n0\n6\n3\n5\n7\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 13): [7, 6]\nTodos los números leídos: [7, 4, 6, 6, 1, 0, 6, 3, 5, 7]\n'),
            ProgramTest('1\n2\n3\n4\n5\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 0): []\nTodos los números leídos: [1, 2, 3, 4, 5]\n'),
            ProgramTest('11\n22\n33\n33\n22\n11\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 66): [11, 22, 33]\nTodos los números leídos: [11, 22, 33, 33, 22, 11]\n'),
            ProgramTest('111\n222\n4\n5\n222\n111\n6\n7\n\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Nuevo número: Números leídos más de una vez (suman 333): [111, 222]\nTodos los números leídos: [111, 222, 4, 5, 222, 111, 6, 7]\n'),
            ProgramTest('\n', 'Ve introduciendo números enteros, o una cadena vacía para acabar...\nNuevo número: Números leídos más de una vez (suman 0): []\nTodos los números leídos: []\n')
          ]
        ]
        ,
        ['ej13.py',
          [
            ProgramTest('PA\nPB\nPC\nPD\n\n14222\n9012\n27530\n1569\n', 'Ve introduciendo candidaturas, o vacío para acabar...\nNueva candidatura: Nueva candidatura: Nueva candidatura: Nueva candidatura: Nueva candidatura: Votos para PA: Votos para PB: Votos para PC: Votos para PD:    27.18% de los votos a candidaturas para PA\n   17.22% de los votos a candidaturas para PB\n   52.61% de los votos a candidaturas para PC\n    3.00% de los votos a candidaturas para PD\n'),
            ProgramTest('Partido Demócrata\nPartido Republicano\n\n60048411\n57368285\n', 'Ve introduciendo candidaturas, o vacío para acabar...\nNueva candidatura: Nueva candidatura: Nueva candidatura: Votos para Partido Demócrata: Votos para Partido Republicano:    51.14% de los votos a candidaturas para Partido Demócrata\n   48.86% de los votos a candidaturas para Partido Republicano\n'),
            ProgramTest('Partido Universitario\nCoalición Universitaria\nGrupo Universitario\nUniversitarios Unidos\n\n35425\n17117\n23425\n1024\n', 'Ve introduciendo candidaturas, o vacío para acabar...\nNueva candidatura: Nueva candidatura: Nueva candidatura: Nueva candidatura: Nueva candidatura: Votos para Partido Universitario: Votos para Coalición Universitaria: Votos para Grupo Universitario: Votos para Universitarios Unidos:    46.01% de los votos a candidaturas para Partido Universitario\n   22.23% de los votos a candidaturas para Coalición Universitaria\n   30.43% de los votos a candidaturas para Grupo Universitario\n    1.33% de los votos a candidaturas para Universitarios Unidos\n'),
            ProgramTest('JMVT\nCCS\nJCAA\n\n10\n13\n4\n', 'Ve introduciendo candidaturas, o vacío para acabar...\nNueva candidatura: Nueva candidatura: Nueva candidatura: Nueva candidatura: Votos para JMVT: Votos para CCS: Votos para JCAA:    37.04% de los votos a candidaturas para JMVT\n   48.15% de los votos a candidaturas para CCS\n   14.81% de los votos a candidaturas para JCAA\n'),
            ProgramTest('Pepe\nLola\nPato\nHilaria\n\n46\n0\n22\n470\n462\n', 'Ve introduciendo candidaturas, o vacío para acabar...\nNueva candidatura: Nueva candidatura: Nueva candidatura: Nueva candidatura: Nueva candidatura: Votos para Pepe: Votos para Lola: Votos para Pato: Votos para Hilaria:     8.55% de los votos a candidaturas para Pepe\n    0.00% de los votos a candidaturas para Lola\n    4.09% de los votos a candidaturas para Pato\n   87.36% de los votos a candidaturas para Hilaria\n'),
            ProgramTest('\n', 'Ve introduciendo candidaturas, o vacío para acabar...\nNueva candidatura: ')
          ]
        ]
        ,
        ['ej14.py',
          [
            ProgramTest('1000\n1000\n950\n1025\n1050\n1100\n975\n1025\n1075\n1125\n1175\n1250\n1200\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: Altura en metros en el punto kilométrico 7: Altura en metros en el punto kilométrico 8: Altura en metros en el punto kilométrico 9: Altura en metros en el punto kilométrico 10: Altura en metros en el punto kilométrico 11: Altura en metros en el punto kilométrico 12: Altura en metros en el punto kilométrico 13: Lista de alturas: [1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1250, 1200]\nLista de desniveles: [0, -50, 75, 25, 50, -125, 50, 50, 50, 50, 75, -50]\nKilómetro con mayor desnivel de subida:\n  Entre los puntos kilométricos 10 y 11\n  Desnivel de 75 m\n', functions = [FunctionTestList('leer_alturas', [FunctionTest ((), '1000\n1000\n950\n925\n900\n900\n\n', [1000, 1000, 950, 925, 900, 900], (), 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: ')]), FunctionTestList('leer_alturas', [FunctionTest ((), '1000\n\n', [1000], (), 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: ')]), FunctionTestList('leer_alturas', [FunctionTest ((), '\n', [], (), 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: ')]), FunctionTestList('calcular_desniveles', [FunctionTest (([1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1175, 1200],), '', [0, -50, 75, 25, 50, -125, 50, 50, 50, 50, 0, 25], ([1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1175, 1200],), ''), FunctionTest (([1000, 1000, 950, 925, 900, 900],), '', [0, -50, -25, -25, 0], ([1000, 1000, 950, 925, 900, 900],), ''), FunctionTest (([1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1250, 1200],), '', [0, -50, 75, 25, 50, -125, 50, 50, 50, 50, 75, -50], ([1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1250, 1200],), ''), FunctionTest (([100, 200, 150, 175, 300],), '', [100, -50, 25, 125], ([100, 200, 150, 175, 300],), ''), FunctionTest (([50, 150, 100, 50],), '', [100, -50, -50], ([50, 150, 100, 50],), ''), FunctionTest (([25, 25, 50, 50, 30, 35, 40, 50],), '', [0, 25, 0, -20, 5, 5, 10], ([25, 25, 50, 50, 30, 35, 40, 50],), '')]), FunctionTestList('posición_máximo', [FunctionTest (([1,2,3,2],), '', 2, ([1, 2, 3, 2],), ''), FunctionTest (([20, 10, 20, 30],), '', 3, ([20, 10, 20, 30],), ''), FunctionTest (([0, -50, 75, 25, 50, -125, 50, 50, 50, 50, 75, -50],), '', 10, ([0, -50, 75, 25, 50, -125, 50, 50, 50, 50, 75, -50],), '')])]),
            ProgramTest('1000\n1000\n950\n925\n900\n900\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: Lista de alturas: [1000, 1000, 950, 925, 900, 900]\nLista de desniveles: [0, -50, -25, -25, 0]\nNingún kilómetro es de subida\n'),
            ProgramTest('1000\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Recorrido no válido, con menos de dos puntos\n'),
            ProgramTest('1000\n1000\n950\n1025\n1050\n1100\n975\n1025\n1075\n1125\n1175\n1175\n1200\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: Altura en metros en el punto kilométrico 7: Altura en metros en el punto kilométrico 8: Altura en metros en el punto kilométrico 9: Altura en metros en el punto kilométrico 10: Altura en metros en el punto kilométrico 11: Altura en metros en el punto kilométrico 12: Altura en metros en el punto kilométrico 13: Lista de alturas: [1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1175, 1200]\nLista de desniveles: [0, -50, 75, 25, 50, -125, 50, 50, 50, 50, 0, 25]\nKilómetro con mayor desnivel de subida:\n  Entre los puntos kilométricos 2 y 3\n  Desnivel de 75 m\n'),
            ProgramTest('\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Recorrido no válido, con menos de dos puntos\n'),
            ProgramTest('100\n200\n150\n175\n300\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Lista de alturas: [100, 200, 150, 175, 300]\nLista de desniveles: [100, -50, 25, 125]\nKilómetro con mayor desnivel de subida:\n  Entre los puntos kilométricos 3 y 4\n  Desnivel de 125 m\n'),
            ProgramTest('50\n150\n100\n50\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Lista de alturas: [50, 150, 100, 50]\nLista de desniveles: [100, -50, -50]\nKilómetro con mayor desnivel de subida:\n  Entre los puntos kilométricos 0 y 1\n  Desnivel de 100 m\n'),
            ProgramTest('25\n25\n50\n50\n30\n35\n40\n50\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: Altura en metros en el punto kilométrico 7: Altura en metros en el punto kilométrico 8: Lista de alturas: [25, 25, 50, 50, 30, 35, 40, 50]\nLista de desniveles: [0, 25, 0, -20, 5, 5, 10]\nKilómetro con mayor desnivel de subida:\n  Entre los puntos kilométricos 1 y 2\n  Desnivel de 25 m\n')
          ]
        ]
        ,
        ['ej15.py',
          [
            ProgramTest('1000\n1000\n950\n1025\n1050\n1100\n975\n1025\n1075\n1125\n1175\n1175\n1200\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: Altura en metros en el punto kilométrico 7: Altura en metros en el punto kilométrico 8: Altura en metros en el punto kilométrico 9: Altura en metros en el punto kilométrico 10: Altura en metros en el punto kilométrico 11: Altura en metros en el punto kilométrico 12: Altura en metros en el punto kilométrico 13: Lista de alturas: [1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1175, 1200]\nTramo de subida número 1:\n  Entre los puntos kilométricos 2 y 5\n  Longitud de 3 km\n  Desnivel de 150 m\nTramo de subida número 2:\n  Entre los puntos kilométricos 6 y 10\n  Longitud de 4 km\n  Desnivel de 200 m\nTramo de subida número 3:\n  Entre los puntos kilométricos 11 y 12\n  Longitud de 1 km\n  Desnivel de 25 m\n', functions = [FunctionTestList('leer_alturas', [FunctionTest ((), '1000\n1000\n950\n925\n900\n900\n\n', [1000, 1000, 950, 925, 900, 900], (), 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: ')]), FunctionTestList('leer_alturas', [FunctionTest ((), '1000\n\n', [1000], (), 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: ')]), FunctionTestList('leer_alturas', [FunctionTest ((), '\n', [], (), 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: ')]), FunctionTestList('mostrar_tramos_subida', [FunctionTest (([1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1175, 1200],), '', None, ([1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1175, 1200],), 'Tramo de subida número 1:\n  Entre los puntos kilométricos 2 y 5\n  Longitud de 3 km\n  Desnivel de 150 m\nTramo de subida número 2:\n  Entre los puntos kilométricos 6 y 10\n  Longitud de 4 km\n  Desnivel de 200 m\nTramo de subida número 3:\n  Entre los puntos kilométricos 11 y 12\n  Longitud de 1 km\n  Desnivel de 25 m\n'), FunctionTest (([1000, 1000, 950, 925, 900, 900],), '', None, ([1000, 1000, 950, 925, 900, 900],), 'Ningún kilómetro es de subida\n'), FunctionTest (([1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1250, 1200],), '', None, ([1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1250, 1200],), 'Tramo de subida número 1:\n  Entre los puntos kilométricos 2 y 5\n  Longitud de 3 km\n  Desnivel de 150 m\nTramo de subida número 2:\n  Entre los puntos kilométricos 6 y 11\n  Longitud de 5 km\n  Desnivel de 275 m\n'), FunctionTest (([100, 200, 150, 175, 300],), '', None, ([100, 200, 150, 175, 300],), 'Tramo de subida número 1:\n  Entre los puntos kilométricos 0 y 1\n  Longitud de 1 km\n  Desnivel de 100 m\nTramo de subida número 2:\n  Entre los puntos kilométricos 2 y 4\n  Longitud de 2 km\n  Desnivel de 150 m\n'), FunctionTest (([50, 150, 100, 50],), '', None, ([50, 150, 100, 50],), 'Tramo de subida número 1:\n  Entre los puntos kilométricos 0 y 1\n  Longitud de 1 km\n  Desnivel de 100 m\n'), FunctionTest (([25, 25, 50, 50, 30, 35, 40, 50],), '', None, ([25, 25, 50, 50, 30, 35, 40, 50],), 'Tramo de subida número 1:\n  Entre los puntos kilométricos 1 y 2\n  Longitud de 1 km\n  Desnivel de 25 m\nTramo de subida número 2:\n  Entre los puntos kilométricos 4 y 7\n  Longitud de 3 km\n  Desnivel de 20 m\n')])]),
            ProgramTest('1000\n1000\n950\n925\n900\n900\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: Lista de alturas: [1000, 1000, 950, 925, 900, 900]\nNingún kilómetro es de subida\n'),
            ProgramTest('1000\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Recorrido no válido, con menos de dos puntos\n'),
            ProgramTest('1000\n1000\n950\n1025\n1050\n1100\n975\n1025\n1075\n1125\n1175\n1250\n1200\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: Altura en metros en el punto kilométrico 7: Altura en metros en el punto kilométrico 8: Altura en metros en el punto kilométrico 9: Altura en metros en el punto kilométrico 10: Altura en metros en el punto kilométrico 11: Altura en metros en el punto kilométrico 12: Altura en metros en el punto kilométrico 13: Lista de alturas: [1000, 1000, 950, 1025, 1050, 1100, 975, 1025, 1075, 1125, 1175, 1250, 1200]\nTramo de subida número 1:\n  Entre los puntos kilométricos 2 y 5\n  Longitud de 3 km\n  Desnivel de 150 m\nTramo de subida número 2:\n  Entre los puntos kilométricos 6 y 11\n  Longitud de 5 km\n  Desnivel de 275 m\n'),
            ProgramTest('\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Recorrido no válido, con menos de dos puntos\n'),
            ProgramTest('100\n200\n150\n175\n300\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Lista de alturas: [100, 200, 150, 175, 300]\nTramo de subida número 1:\n  Entre los puntos kilométricos 0 y 1\n  Longitud de 1 km\n  Desnivel de 100 m\nTramo de subida número 2:\n  Entre los puntos kilométricos 2 y 4\n  Longitud de 2 km\n  Desnivel de 150 m\n'),
            ProgramTest('50\n150\n100\n50\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Lista de alturas: [50, 150, 100, 50]\nTramo de subida número 1:\n  Entre los puntos kilométricos 0 y 1\n  Longitud de 1 km\n  Desnivel de 100 m\n'),
            ProgramTest('25\n25\n50\n50\n30\n35\n40\n50\n\n', 'Ve introduciendo alturas sobre el nivel del mar, o una cadena vacía para acabar...\nAltura en metros en el punto kilométrico 0: Altura en metros en el punto kilométrico 1: Altura en metros en el punto kilométrico 2: Altura en metros en el punto kilométrico 3: Altura en metros en el punto kilométrico 4: Altura en metros en el punto kilométrico 5: Altura en metros en el punto kilométrico 6: Altura en metros en el punto kilométrico 7: Altura en metros en el punto kilométrico 8: Lista de alturas: [25, 25, 50, 50, 30, 35, 40, 50]\nTramo de subida número 1:\n  Entre los puntos kilométricos 1 y 2\n  Longitud de 1 km\n  Desnivel de 25 m\nTramo de subida número 2:\n  Entre los puntos kilométricos 4 y 7\n  Longitud de 3 km\n  Desnivel de 20 m\n')
          ]
        ]
        ,
        ['ej16.py',
          [
            ProgramTest('10, 15, 20, 25, 30, 35, ...\n', "Introduce una cadena: La lista de secuencias obtenida es ['10', '15', '20', '25', '30', '35']\n", functions = [FunctionTestList('es_dígito', [FunctionTest (("0",), '', True, ('0',), ''), FunctionTest (("1",), '', True, ('1',), ''), FunctionTest (("2",), '', True, ('2',), ''), FunctionTest (("3",), '', True, ('3',), ''), FunctionTest (("4",), '', True, ('4',), ''), FunctionTest (("5",), '', True, ('5',), ''), FunctionTest (("6",), '', True, ('6',), ''), FunctionTest (("7",), '', True, ('7',), ''), FunctionTest (("8",), '', True, ('8',), ''), FunctionTest (("9",), '', True, ('9',), ''), FunctionTest ((" ",), '', False, (' ',), ''), FunctionTest (("-",), '', False, ('-',), ''), FunctionTest ((".",), '', False, ('.',), ''), FunctionTest (("a",), '', False, ('a',), ''), FunctionTest (("Ñ",), '', False, ('Ñ',), ''), FunctionTest (("B",), '', False, ('B',), '')]), FunctionTestList('secuencias_dígitos', [FunctionTest (("10, 15, 20, 25, 30, 35, ...",), '', ['10', '15', '20', '25', '30', '35'], ('10, 15, 20, 25, 30, 35, ...',), ''), FunctionTest (("12*x-5*y=8.75",), '', ['12', '5', '8', '75'], ('12*x-5*y=8.75',), ''), FunctionTest (("2, 3, 5, 7, 11...",), '', ['2', '3', '5', '7', '11'], ('2, 3, 5, 7, 11...',), ''), FunctionTest (("12481632641282565121024",), '', ['12481632641282565121024'], ('12481632641282565121024',), ''), FunctionTest (("000123456789X1112y13",), '', ['000123456789', '1112', '13'], ('000123456789X1112y13',), ''), FunctionTest (("xx12345007+23/(4-hola*4ever)",), '', ['12345007', '23', '4', '4'], ('xx12345007+23/(4-hola*4ever)',), ''), FunctionTest (("abcd",), '', [], ('abcd',), ''), FunctionTest (("ab1cd",), '', ['1'], ('ab1cd',), ''), FunctionTest (("abcd9",), '', ['9'], ('abcd9',), ''), FunctionTest (("0abcd",), '', ['0'], ('0abcd',), ''), FunctionTest (("964-72-80-00",), '', ['964', '72', '80', '00'], ('964-72-80-00',), ''), FunctionTest (("(964)728000",), '', ['964', '728000'], ('(964)728000',), ''), FunctionTest (("EI1003/MT1003",), '', ['1003', '1003'], ('EI1003/MT1003',), ''), FunctionTest (("123+45=168",), '', ['123', '45', '168'], ('123+45=168',), ''), FunctionTest (("964728000",), '', ['964728000'], ('964728000',), ''), FunctionTest (("Bye",), '', [], ('Bye',), ''), FunctionTest (("",), '', [], ('',), '')])]),
            ProgramTest('12*x-5*y=8.75\n', "Introduce una cadena: La lista de secuencias obtenida es ['12', '5', '8', '75']\n"),
            ProgramTest('\n', 'Introduce una cadena: La lista de secuencias obtenida es []\n'),
            ProgramTest('2, 3, 5, 7, 11...\n', "Introduce una cadena: La lista de secuencias obtenida es ['2', '3', '5', '7', '11']\n"),
            ProgramTest('12481632641282565121024\n', "Introduce una cadena: La lista de secuencias obtenida es ['12481632641282565121024']\n"),
            ProgramTest('000123456789X1112y13\n', "Introduce una cadena: La lista de secuencias obtenida es ['000123456789', '1112', '13']\n"),
            ProgramTest('xx12345007+23/(4-hola*4ever)\n', "Introduce una cadena: La lista de secuencias obtenida es ['12345007', '23', '4', '4']\n"),
            ProgramTest('abcd\n', 'Introduce una cadena: La lista de secuencias obtenida es []\n'),
            ProgramTest('ab1cd\n', "Introduce una cadena: La lista de secuencias obtenida es ['1']\n"),
            ProgramTest('abcd9\n', "Introduce una cadena: La lista de secuencias obtenida es ['9']\n"),
            ProgramTest('0abcd\n', "Introduce una cadena: La lista de secuencias obtenida es ['0']\n"),
            ProgramTest('964-72-80-00\n', "Introduce una cadena: La lista de secuencias obtenida es ['964', '72', '80', '00']\n"),
            ProgramTest('(964)728000\n', "Introduce una cadena: La lista de secuencias obtenida es ['964', '728000']\n"),
            ProgramTest('EI1003/MT1003\n', "Introduce una cadena: La lista de secuencias obtenida es ['1003', '1003']\n"),
            ProgramTest('123+45=168\n', "Introduce una cadena: La lista de secuencias obtenida es ['123', '45', '168']\n"),
            ProgramTest('964728000\n', "Introduce una cadena: La lista de secuencias obtenida es ['964728000']\n"),
            ProgramTest('Bye\n', 'Introduce una cadena: La lista de secuencias obtenida es []\n')
          ]
        ]
        ,
        ['ej17.py',
          [
            ProgramTest('cbbaabcdcc\ncbababcd\ncbababcd**\na*a*a*aaaa\n*bbbbbbbbb\ncbba*bcdcc\nexit\n\n', 'Introduce la plantilla de respuestas correctas: Ve introduciendo respuestas de alumnos, o vacío para acabar...\nNuevas respuestas: La cadena introducida es de longitud 8 (se esperaba 10)\nNuevas respuestas: Resultados: 6 BIEN; 2 MAL; 2 NS/NC\nNuevas respuestas: Resultados: 1 BIEN; 6 MAL; 3 NS/NC\nNuevas respuestas: Resultados: 3 BIEN; 6 MAL; 1 NS/NC\nNuevas respuestas: Resultados: 9 BIEN; 0 MAL; 1 NS/NC\nNuevas respuestas: La cadena introducida es de longitud 4 (se esperaba 10)\nNuevas respuestas: Alumnos corregidos: 4\n', functions = [FunctionTestList('evaluación_test', [FunctionTest (("cbbaabcdcc","cbababcd"), '', None, ('cbbaabcdcc', 'cbababcd'), ''), FunctionTest (("cbbaabcdcc","cbababcd**"), '', [6, 2, 2], ('cbbaabcdcc', 'cbababcd**'), ''), FunctionTest (("cbbaabcdcc","a*a*a*aaaa"), '', [1, 6, 3], ('cbbaabcdcc', 'a*a*a*aaaa'), ''), FunctionTest (("cbbaabcdcc","*bbbbbbbbb"), '', [3, 6, 1], ('cbbaabcdcc', '*bbbbbbbbb'), ''), FunctionTest (("cbbaabcdcc","cbba*bcdcc"), '', [9, 0, 1], ('cbbaabcdcc', 'cbba*bcdcc'), ''), FunctionTest (("cbbaabcdcc","exit"), '', None, ('cbbaabcdcc', 'exit'), ''), FunctionTest (("abc",""), '', None, ('abc', ''), ''), FunctionTest (("bbdcdbaaccdaccd","bbd*bd*accdaccd"), '', [11, 2, 2], ('bbdcdbaaccdaccd', 'bbd*bd*accdaccd'), ''), FunctionTest (("bbdcdbaaccdaccd","abcd"), '', None, ('bbdcdbaaccdaccd', 'abcd'), ''), FunctionTest (("bbdcdbaaccdaccd","bbdcdbaaccdaccd"), '', [15, 0, 0], ('bbdcdbaaccdaccd', 'bbdcdbaaccdaccd'), ''), FunctionTest (("bbdcdbaaccdaccd","*b*d*b*d*c*b*c*"), '', [4, 3, 8], ('bbdcdbaaccdaccd', '*b*d*b*d*c*b*c*'), ''), FunctionTest (("",""), '', [0, 0, 0], ('', ''), ''), FunctionTest (("aaa",""), '', None, ('aaa', ''), ''), FunctionTest (("","***"), '', None, ('', '***'), '')])]),
            ProgramTest('abc\n\n', 'Introduce la plantilla de respuestas correctas: Ve introduciendo respuestas de alumnos, o vacío para acabar...\nNuevas respuestas: Alumnos corregidos: 0\n'),
            ProgramTest('bbdcdbaaccdaccd\nbbd*bd*accdaccd\nabcd\nbbdcdbaaccdaccd\n*b*d*b*d*c*b*c*\n\n', 'Introduce la plantilla de respuestas correctas: Ve introduciendo respuestas de alumnos, o vacío para acabar...\nNuevas respuestas: Resultados: 11 BIEN; 2 MAL; 2 NS/NC\nNuevas respuestas: La cadena introducida es de longitud 4 (se esperaba 15)\nNuevas respuestas: Resultados: 15 BIEN; 0 MAL; 0 NS/NC\nNuevas respuestas: Resultados: 4 BIEN; 3 MAL; 8 NS/NC\nNuevas respuestas: Alumnos corregidos: 3\n')
          ]
        ]
        ,
        ['ej18.py',
          [
            ProgramTest('matriz1.txt\n', 'Introduce el nombre de un fichero: -153    -3    94    27   -81   107     7\n  74   170  -185  -174  -162    -7   193\n  91  -215  -159  -241   -31    90   -79\n  77   173   -29   205   -23   -20   -22\n 195  -112   133    83    -6   223    78\n'),
            ProgramTest('matriz2.txt\n', 'Introduce el nombre de un fichero:  136    77  -144    98    45   -27   106   191   204   254\n-172    82   -95   179  -128   -84  -233    88   -47     1\n 226    58  -151  -188  -169   -25   -43   204   167   200\n -29  -150  -217   245    73   215    49    88    21    86\n-184    -1  -117   144   161  -122    79    61   155  -105\n  71   -92   -21    -4   212  -220  -170   165    -8  -183\n-175   132   159    75  -185    72  -201  -175  -150  -133\n 165   149    38   197  -190  -112   194    55   162     0\n  40   111   164  -165   250    55  -214  -237    80   111\n-147   111   229    22   -17    -2   154  -192  -166  -175\n')
          ]
        ]
        ,
        ['ej19.py',
          [
            ProgramTest('matriz1.txt\n', 'Introduce el nombre de un fichero: La suma de todos los elementos en la matriz es 318\n', functions = [FunctionTestList('sumar_elementos', [FunctionTest (([[5]],), '', 5, ([[5]],), ''), FunctionTest (([[1,10],[10,2]],), '', 23, ([[1, 10], [10, 2]],), ''), FunctionTest (([[1,2,3],[4,5,6]],), '', 21, ([[1, 2, 3], [4, 5, 6]],), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]],), '', 30, ([[1, 2, 0], [4, 0, 6], [0, 8, 9]],), '')])]),
            ProgramTest('matriz2.txt\n', 'Introduce el nombre de un fichero: La suma de todos los elementos en la matriz es 1101\n'),
            ProgramTest('matriz.txt\n', 'Introduce el nombre de un fichero: La suma de todos los elementos en la matriz es 11458\n'),
            ProgramTest('tux.txt\n', 'Introduce el nombre de un fichero: La suma de todos los elementos en la matriz es 1047471\n'),
            ProgramTest('uji.txt\n', 'Introduce el nombre de un fichero: La suma de todos los elementos en la matriz es 284019\n')
          ]
        ]
        ,
        ['ej20.py',
          [
            ProgramTest('matriz1.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos en la fila 0 es -2\nLa suma de los elementos en la fila 1 es -91\nLa suma de los elementos en la fila 2 es -544\nLa suma de los elementos en la fila 3 es 361\nLa suma de los elementos en la fila 4 es 594\n', functions = [FunctionTestList('sumar_fila', [FunctionTest (([[5]],0, ), '', 5, ([[5]], 0), ''), FunctionTest (([[1,10],[10,2]], 0, ), '', 11, ([[1, 10], [10, 2]], 0), ''), FunctionTest (([[1,10],[10,2]], 1, ), '', 12, ([[1, 10], [10, 2]], 1), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]], 0, ), '', 3, ([[1, 2, 0], [4, 0, 6], [0, 8, 9]], 0), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]], 1, ), '', 10, ([[1, 2, 0], [4, 0, 6], [0, 8, 9]], 1), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]], 2, ), '', 17, ([[1, 2, 0], [4, 0, 6], [0, 8, 9]], 2), '')])]),
            ProgramTest('matriz2.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos en la fila 0 es 940\nLa suma de los elementos en la fila 1 es -409\nLa suma de los elementos en la fila 2 es 279\nLa suma de los elementos en la fila 3 es 381\nLa suma de los elementos en la fila 4 es 71\nLa suma de los elementos en la fila 5 es -250\nLa suma de los elementos en la fila 6 es -581\nLa suma de los elementos en la fila 7 es 658\nLa suma de los elementos en la fila 8 es 195\nLa suma de los elementos en la fila 9 es -183\n')
          ]
        ]
        ,
        ['ej21.py',
          [
            ProgramTest('matriz1.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos en la columna 0 es 284\nLa suma de los elementos en la columna 1 es 13\nLa suma de los elementos en la columna 2 es -146\nLa suma de los elementos en la columna 3 es -100\nLa suma de los elementos en la columna 4 es -303\nLa suma de los elementos en la columna 5 es 393\nLa suma de los elementos en la columna 6 es 177\n', functions = [FunctionTestList('sumar_columna', [FunctionTest (([[5]],0, ), '', 5, ([[5]], 0), ''), FunctionTest (([[1,10],[10,2]], 0, ), '', 11, ([[1, 10], [10, 2]], 0), ''), FunctionTest (([[1,10],[10,2]], 1, ), '', 12, ([[1, 10], [10, 2]], 1), ''), FunctionTest (([[1,2,0],[4,0,6]], 0, ), '', 5, ([[1, 2, 0], [4, 0, 6]], 0), ''), FunctionTest (([[1,2,0],[4,0,6]], 1, ), '', 2, ([[1, 2, 0], [4, 0, 6]], 1), ''), FunctionTest (([[1,2,0],[4,0,6]], 2, ), '', 6, ([[1, 2, 0], [4, 0, 6]], 2), '')])]),
            ProgramTest('matriz2.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos en la columna 0 es -69\nLa suma de los elementos en la columna 1 es 477\nLa suma de los elementos en la columna 2 es -155\nLa suma de los elementos en la columna 3 es 603\nLa suma de los elementos en la columna 4 es 52\nLa suma de los elementos en la columna 5 es -250\nLa suma de los elementos en la columna 6 es -279\nLa suma de los elementos en la columna 7 es 248\nLa suma de los elementos en la columna 8 es 418\nLa suma de los elementos en la columna 9 es 56\n')
          ]
        ]
        ,
        ['ej22.py',
          [
            ProgramTest('matriz1.txt\n', 'Introduce el nombre de un fichero: Error. Se requiere una matriz cuadrada\n', functions = [FunctionTestList('sumar_diagonal', [FunctionTest (([[5]], ), '', 5, ([[5]],), ''), FunctionTest (([[1,10],[10,2]], ), '', 3, ([[1, 10], [10, 2]],), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]], ), '', 10, ([[1, 2, 0], [4, 0, 6], [0, 8, 9]],), ''), FunctionTest (([[1,2,0],[4,0,6]], ), '', None, ([[1, 2, 0], [4, 0, 6]],), '')])]),
            ProgramTest('matriz2.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos en la diagonal principal es 12\n'),
            ProgramTest('matriz.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos en la diagonal principal es 4102\n'),
            ProgramTest('tux.txt\n', 'Introduce el nombre de un fichero: Error. Se requiere una matriz cuadrada\n'),
            ProgramTest('uji.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos en la diagonal principal es 4980\n')
          ]
        ]
        ,
        ['ej23.py',
          [
            ProgramTest('matriz1.txt\n', 'Introduce el nombre de un fichero: Error. Se requiere una matriz cuadrada\n', functions = [FunctionTestList('producto_diagonal_secundaria', [FunctionTest (([[5]],), '', 5, ([[5]],), ''), FunctionTest (([[1,10],[10,2]],), '', 100, ([[1, 10], [10, 2]],), ''), FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],), '', 105, ([[1, 2, 3], [4, 5, 6], [7, 8, 9]],), ''), FunctionTest (([[-1]],), '', -1, ([[-1]],), ''), FunctionTest (([[1,20],[10,2]],), '', 200, ([[1, 20], [10, 2]],), ''), FunctionTest (([[1,2,1],[4,1,6],[1,8,9]],), '', 1, ([[1, 2, 1], [4, 1, 6], [1, 8, 9]],), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]],), '', 0, ([[1, 2, 0], [4, 0, 6], [0, 8, 9]],), ''), FunctionTest (([[1,2,1],[4,5,6],[0,8,9]],), '', 0, ([[1, 2, 1], [4, 5, 6], [0, 8, 9]],), ''), FunctionTest (([[1,2]],), '', None, ([[1, 2]],), '')])]),
            ProgramTest('matriz2.txt\n', 'Introduce el nombre de un fichero: El producto de los elementos en la diagonal secundaria es -143528678807602838400\n'),
            ProgramTest('matriz.txt\n', 'Introduce el nombre de un fichero: El producto de los elementos en la diagonal secundaria es 476562834231408596138739163135664959377665582707171999967036002102555332157467925891734511231432622732770992414722660032341384389987458455097595831960865068474695680000000000000000000000000000\n'),
            ProgramTest('tux.txt\n', 'Introduce el nombre de un fichero: Error. Se requiere una matriz cuadrada\n'),
            ProgramTest('uji.txt\n', 'Introduce el nombre de un fichero: El producto de los elementos en la diagonal secundaria es 2123971829164777398405470347081652431941798508381036664928595060200666576168539387376898670592000000\n')
          ]
        ]
        ,
        ['ej24.py',
          [
            ProgramTest('matriz1.txt\n', 'Introduce el nombre de un fichero: Error. Se requiere una matriz cuadrada\n', functions = [FunctionTestList('sumar_encima_diagonal', [FunctionTest (([[5]],), '', 0, ([[5]],), ''), FunctionTest (([[1,10],[10,2]],), '', 10, ([[1, 10], [10, 2]],), ''), FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],), '', 11, ([[1, 2, 3], [4, 5, 6], [7, 8, 9]],), ''), FunctionTest (([[-1]],), '', 0, ([[-1]],), ''), FunctionTest (([[1,20],[10,2]],), '', 20, ([[1, 20], [10, 2]],), ''), FunctionTest (([[1,2,1],[4,1,6],[1,8,9]],), '', 9, ([[1, 2, 1], [4, 1, 6], [1, 8, 9]],), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]],), '', 8, ([[1, 2, 0], [4, 0, 6], [0, 8, 9]],), ''), FunctionTest (([[1,2,1],[4,5,6],[0,8,9]],), '', 9, ([[1, 2, 1], [4, 5, 6], [0, 8, 9]],), ''), FunctionTest (([[1,2]],), '', None, ([[1, 2]],), '')])]),
            ProgramTest('matriz2.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos por encima de la diagonal principal es 850\n'),
            ProgramTest('matriz.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos por encima de la diagonal principal es 314\n'),
            ProgramTest('tux.txt\n', 'Introduce el nombre de un fichero: Error. Se requiere una matriz cuadrada\n'),
            ProgramTest('uji.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos por encima de la diagonal principal es 153121\n')
          ]
        ]
        ,
        ['ej25.py',
          [
            ProgramTest('matriz1.txt\n', 'Introduce el nombre de un fichero: Error. Se requiere una matriz cuadrada\n', functions = [FunctionTestList('sumar_debajo_diagonal', [FunctionTest (([[5]],), '', 0, ([[5]],), ''), FunctionTest (([[1,10],[10,2]],), '', 10, ([[1, 10], [10, 2]],), ''), FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],), '', 19, ([[1, 2, 3], [4, 5, 6], [7, 8, 9]],), ''), FunctionTest (([[-1]],), '', 0, ([[-1]],), ''), FunctionTest (([[1,20],[10,2]],), '', 10, ([[1, 20], [10, 2]],), ''), FunctionTest (([[1,2,1],[4,1,6],[1,8,9]],), '', 13, ([[1, 2, 1], [4, 1, 6], [1, 8, 9]],), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]],), '', 12, ([[1, 2, 0], [4, 0, 6], [0, 8, 9]],), ''), FunctionTest (([[1,2,1],[4,5,6],[0,8,9]],), '', 12, ([[1, 2, 1], [4, 5, 6], [0, 8, 9]],), ''), FunctionTest (([[1,2]],), '', None, ([[1, 2]],), '')])]),
            ProgramTest('matriz2.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos por debajo de la diagonal principal es 239\n'),
            ProgramTest('matriz.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos por debajo de la diagonal principal es 7042\n'),
            ProgramTest('tux.txt\n', 'Introduce el nombre de un fichero: Error. Se requiere una matriz cuadrada\n'),
            ProgramTest('uji.txt\n', 'Introduce el nombre de un fichero: La suma de los elementos por debajo de la diagonal principal es 125918\n')
          ]
        ]
        ,
        ['ej26.py',
          [
            ProgramTest('tux.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros26/fichero0.txt'),
            ProgramTest('uji.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros26/fichero1.txt')
          ]
        ]
        ,
        ['ej27.py',
          [
            ProgramTest('tux.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros27/fichero0.txt', functions = [FunctionTestList('aplicar_filtro_negativo', [FunctionTest (([[5]],), '', None, ([[250]],), ''), FunctionTest (([[1,10],[10,2]],), '', None, ([[254, 245], [245, 253]],), ''), FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],), '', None, ([[254, 253, 252], [251, 250, 249], [248, 247, 246]],), ''), FunctionTest (([[1,20],[10,2]],), '', None, ([[254, 235], [245, 253]],), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]],), '', None, ([[254, 253, 255], [251, 255, 249], [255, 247, 246]],), ''), FunctionTest (([[1,2]],), '', None, ([[254, 253]],), ''), FunctionTest (([[1,2,3],[4,5,6]],), '', None, ([[254, 253, 252], [251, 250, 249]],), ''), FunctionTest (([[1,0],[4,0],[8,9]],), '', None, ([[254, 255], [251, 255], [247, 246]],), ''), FunctionTest (([[2,5,7,3,4,8,23,55,12,5,2,3]],), '', None, ([[253, 250, 248, 252, 251, 247, 232, 200, 243, 250, 253, 252]],), ''), FunctionTest (([[2],[5],[7],[3],[4],[8],[23],[55],[12],[5],[2],[3]],), '', None, ([[253], [250], [248], [252], [251], [247], [232], [200], [243], [250], [253], [252]],), '')])]),
            ProgramTest('uji.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros27/fichero1.txt')
          ]
        ]
        ,
        ['ej28.py',
          [
            ProgramTest('tux.txt\n170\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero0.txt', functions = [FunctionTestList('nueva_matriz', [FunctionTest ((1,3,0), '', [[0, 0, 0]], (1, 3, 0), ''), FunctionTest ((2,3,1), '', [[1, 1, 1], [1, 1, 1]], (2, 3, 1), ''), FunctionTest ((2,2,200), '', [[200, 200], [200, 200]], (2, 2, 200), ''), FunctionTest ((15,2,9), '', [[9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9]], (15, 2, 9), '')]), FunctionTestList('binarizada', [FunctionTest (([[5]],10), '', [[0]], ([[5]], 10), ''), FunctionTest (([[5]],2), '', [[255]], ([[5]], 2), ''), FunctionTest (([[1,10],[10,2]],5), '', [[0, 255], [255, 0]], ([[1, 10], [10, 2]], 5), ''), FunctionTest (([[1,10],[10,2]],2), '', [[0, 255], [255, 0]], ([[1, 10], [10, 2]], 2), ''), FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],5), '', [[0, 0, 0], [0, 0, 255], [255, 255, 255]], ([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 5), ''), FunctionTest (([[7]],6), '', [[255]], ([[7]], 6), ''), FunctionTest (([[7]],7), '', [[0]], ([[7]], 7), ''), FunctionTest (([[7]],8), '', [[0]], ([[7]], 8), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]],9), '', [[0, 0, 0], [0, 0, 0], [0, 0, 0]], ([[1, 2, 0], [4, 0, 6], [0, 8, 9]], 9), ''), FunctionTest (([[1,2]],1), '', [[0, 255]], ([[1, 2]], 1), ''), FunctionTest (([[1,2]],2), '', [[0, 0]], ([[1, 2]], 2), ''), FunctionTest (([[1,2]],3), '', [[0, 0]], ([[1, 2]], 3), '')])]),
            ProgramTest('tux.txt\n0\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero1.txt'),
            ProgramTest('uji.txt\n0\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero2.txt'),
            ProgramTest('tux.txt\n5\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero3.txt'),
            ProgramTest('uji.txt\n8\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero4.txt'),
            ProgramTest('tux.txt\n10\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero5.txt'),
            ProgramTest('uji.txt\n10\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero6.txt'),
            ProgramTest('tux.txt\n55\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero7.txt'),
            ProgramTest('uji.txt\n78\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero8.txt'),
            ProgramTest('tux.txt\n100\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero9.txt'),
            ProgramTest('uji.txt\n100\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero10.txt'),
            ProgramTest('tux.txt\n109\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero11.txt'),
            ProgramTest('uji.txt\n198\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero12.txt'),
            ProgramTest('tux.txt\n200\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero13.txt'),
            ProgramTest('uji.txt\n200\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero14.txt'),
            ProgramTest('tux.txt\n240\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero15.txt'),
            ProgramTest('uji.txt\n245\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero16.txt'),
            ProgramTest('tux.txt\n255\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero17.txt'),
            ProgramTest('uji.txt\n255\n', 'Introduce el nombre de la imagen: Introduce el umbral:', image = 'boletin04.ficheros/ficheros28/fichero18.txt')
          ]
        ]
        ,
        ['ej29.py',
          [
            ProgramTest('tux.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros29/fichero0.txt', functions = [FunctionTestList('reflejar_horizontal', [FunctionTest (([[5]],), '', None, ([[5]],), ''), FunctionTest (([[1,10],[10,2]],), '', None, ([[10, 1], [2, 10]],), ''), FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],), '', None, ([[3, 2, 1], [6, 5, 4], [9, 8, 7]],), ''), FunctionTest (([[1,20],[10,2]],), '', None, ([[20, 1], [2, 10]],), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]],), '', None, ([[0, 2, 1], [6, 0, 4], [9, 8, 0]],), ''), FunctionTest (([[1,2]],), '', None, ([[2, 1]],), ''), FunctionTest (([[1,2,3],[4,5,6]],), '', None, ([[3, 2, 1], [6, 5, 4]],), ''), FunctionTest (([[1,0],[4,0],[8,9]],), '', None, ([[0, 1], [0, 4], [9, 8]],), ''), FunctionTest (([[2,5,7,3,4,8,23,55,12,5,2,3]],), '', None, ([[3, 2, 5, 12, 55, 23, 8, 4, 3, 7, 5, 2]],), ''), FunctionTest (([[2],[5],[7],[3],[4],[8],[23],[55],[12],[5],[2],[3]],), '', None, ([[2], [5], [7], [3], [4], [8], [23], [55], [12], [5], [2], [3]],), '')])]),
            ProgramTest('uji.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros29/fichero1.txt')
          ]
        ]
        ,
        ['ej30.py',
          [
            ProgramTest('tux.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros30/fichero0.txt', functions = [FunctionTestList('reflejar_vertical', [FunctionTest (([[5]],), '', None, ([[5]],), ''), FunctionTest (([[1,10],[10,2]],), '', None, ([[10, 2], [1, 10]],), ''), FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],), '', None, ([[7, 8, 9], [4, 5, 6], [1, 2, 3]],), ''), FunctionTest (([[1,20],[10,2]],), '', None, ([[10, 2], [1, 20]],), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]],), '', None, ([[0, 8, 9], [4, 0, 6], [1, 2, 0]],), ''), FunctionTest (([[1,2]],), '', None, ([[1, 2]],), ''), FunctionTest (([[1,2,3],[4,5,6]],), '', None, ([[4, 5, 6], [1, 2, 3]],), ''), FunctionTest (([[1,0],[4,0],[8,9]],), '', None, ([[8, 9], [4, 0], [1, 0]],), ''), FunctionTest (([[2,5,7,3,4,8,23,55,12,5,2,3]],), '', None, ([[2, 5, 7, 3, 4, 8, 23, 55, 12, 5, 2, 3]],), ''), FunctionTest (([[2],[5],[7],[3],[4],[8],[23],[55],[12],[5],[2],[3]],), '', None, ([[3], [2], [5], [12], [55], [23], [8], [4], [3], [7], [5], [2]],), '')])]),
            ProgramTest('uji.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros30/fichero1.txt')
          ]
        ]
        ,
        ['ej31.py',
          [
            ProgramTest('tux.txt\n52\n15\n', 'Introduce el nombre de la imagen: Introduce un número de fila: Introduce un número de columna: El promedio en el entorno del punto (52,15) es 57.22\n', functions = [FunctionTestList('promedio_entorno', [FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],1,1), '', 5.0, ([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1, 1), ''), FunctionTest (([[1,2,3,4],[4,5,6,7],[7,8,9,10],[11,12,13,14]],1,2), '', 6.0, ([[1, 2, 3, 4], [4, 5, 6, 7], [7, 8, 9, 10], [11, 12, 13, 14]], 1, 2), ''), FunctionTest (([[1,2,3,4],[4,5,6,7],[7,8,9,10],[11,12,13,14]],2,1), '', 8.333333333333334, ([[1, 2, 3, 4], [4, 5, 6, 7], [7, 8, 9, 10], [11, 12, 13, 14]], 2, 1), ''), FunctionTest (([[10,12,33],[44,50,6],[107,8,200]],1,1), '', 52.22222222222222, ([[10, 12, 33], [44, 50, 6], [107, 8, 200]], 1, 1), ''), FunctionTest (([[31,28,9,44],[45,95,62,73],[37,83,59,100],[101,212,13,1]],1,2), '', 61.44444444444444, ([[31, 28, 9, 44], [45, 95, 62, 73], [37, 83, 59, 100], [101, 212, 13, 1]], 1, 2), ''), FunctionTest (([[1,0,3,0],[0,5,0,7],[2,2,2,10],[1,120,13,104]],2,2), '', 29.22222222222222, ([[1, 0, 3, 0], [0, 5, 0, 7], [2, 2, 2, 10], [1, 120, 13, 104]], 2, 2), '')])]),
            ProgramTest('tux.txt\n35\n30\n', 'Introduce el nombre de la imagen: Introduce un número de fila: Introduce un número de columna: El promedio en el entorno del punto (35,30) es 240.67\n'),
            ProgramTest('tux.txt\n10\n10\n', 'Introduce el nombre de la imagen: Introduce un número de fila: Introduce un número de columna: El promedio en el entorno del punto (10,10) es 254.00\n'),
            ProgramTest('uji.txt\n52\n15\n', 'Introduce el nombre de la imagen: Introduce un número de fila: Introduce un número de columna: El promedio en el entorno del punto (52,15) es 67.33\n'),
            ProgramTest('uji.txt\n35\n30\n', 'Introduce el nombre de la imagen: Introduce un número de fila: Introduce un número de columna: El promedio en el entorno del punto (35,30) es 31.89\n'),
            ProgramTest('uji.txt\n10\n10\n', 'Introduce el nombre de la imagen: Introduce un número de fila: Introduce un número de columna: El promedio en el entorno del punto (10,10) es 191.44\n'),
            ProgramTest('tux.txt\n1\n1\n', 'Introduce el nombre de la imagen: Introduce un número de fila: Introduce un número de columna: El promedio en el entorno del punto (1,1) es 254.00\n'),
            ProgramTest('tux.txt\n1\n1\n', 'Introduce el nombre de la imagen: Introduce un número de fila: Introduce un número de columna: El promedio en el entorno del punto (1,1) es 254.00\n'),
            ProgramTest('uji.txt\n58\n58\n', 'Introduce el nombre de la imagen: Introduce un número de fila: Introduce un número de columna: El promedio en el entorno del punto (58,58) es 206.67\n')
          ]
        ]
        ,
        ['ej32.py',
          [
            ProgramTest('tux.txt\n0\n', 'Introduce el nombre de la imagen: Introduce el valor del borde: ', image = 'boletin04.ficheros/ficheros32/fichero0.txt', functions = [FunctionTestList('nueva_matriz', [FunctionTest ((1,3,0), '', [[0, 0, 0]], (1, 3, 0), ''), FunctionTest ((2,3,1), '', [[1, 1, 1], [1, 1, 1]], (2, 3, 1), ''), FunctionTest ((2,2,200), '', [[200, 200], [200, 200]], (2, 2, 200), ''), FunctionTest ((15,2,9), '', [[9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9], [9, 9]], (15, 2, 9), '')]), FunctionTestList('promedio_entorno', [FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],1,1), '', 5.0, ([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1, 1), ''), FunctionTest (([[1,2,3,4],[4,5,6,7],[7,8,9,10],[11,12,13,14]],1,2), '', 6.0, ([[1, 2, 3, 4], [4, 5, 6, 7], [7, 8, 9, 10], [11, 12, 13, 14]], 1, 2), ''), FunctionTest (([[1,2,3,4],[4,5,6,7],[7,8,9,10],[11,12,13,14]],2,1), '', 8.333333333333334, ([[1, 2, 3, 4], [4, 5, 6, 7], [7, 8, 9, 10], [11, 12, 13, 14]], 2, 1), ''), FunctionTest (([[10,12,33],[44,50,6],[107,8,200]],1,1), '', 52.22222222222222, ([[10, 12, 33], [44, 50, 6], [107, 8, 200]], 1, 1), ''), FunctionTest (([[31,28,9,44],[45,95,62,73],[37,83,59,100],[101,212,13,1]],1,2), '', 61.44444444444444, ([[31, 28, 9, 44], [45, 95, 62, 73], [37, 83, 59, 100], [101, 212, 13, 1]], 1, 2), ''), FunctionTest (([[1,0,3,0],[0,5,0,7],[2,2,2,10],[1,120,13,104]],2,2), '', 29.22222222222222, ([[1, 0, 3, 0], [0, 5, 0, 7], [2, 2, 2, 10], [1, 120, 13, 104]], 2, 2), '')]), FunctionTestList('difuminada', [FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],1), '', [[1, 1, 1], [1, 5, 1], [1, 1, 1]], ([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1), ''), FunctionTest (([[1,2,3,4],[4,25,6,7],[7,8,9,10],[11,12,13,14]],10), '', [[10, 10, 10, 10], [10, 7, 8, 10], [10, 11, 12, 10], [10, 10, 10, 10]], ([[1, 2, 3, 4], [4, 25, 6, 7], [7, 8, 9, 10], [11, 12, 13, 14]], 10), ''), FunctionTest (([[1,2,3,4],[4,5,6,7],[7,8,9,10],[11,12,13,14]],255), '', [[255, 255, 255, 255], [255, 5, 6, 255], [255, 8, 9, 255], [255, 255, 255, 255]], ([[1, 2, 3, 4], [4, 5, 6, 7], [7, 8, 9, 10], [11, 12, 13, 14]], 255), ''), FunctionTest (([[10,12,33],[44,50,6],[107,8,200]],111), '', [[111, 111, 111], [111, 52, 111], [111, 111, 111]], ([[10, 12, 33], [44, 50, 6], [107, 8, 200]], 111), ''), FunctionTest (([[31,28,9,44],[45,95,62,73],[37,83,59,100],[101,212,13,1]],0), '', [[0, 0, 0, 0], [0, 50, 61, 0], [0, 79, 78, 0], [0, 0, 0, 0]], ([[31, 28, 9, 44], [45, 95, 62, 73], [37, 83, 59, 100], [101, 212, 13, 1]], 0), ''), FunctionTest (([[1,0,3,0],[0,5,0,7],[2,2,2,10],[1,120,13,104]],22), '', [[22, 22, 22, 22], [22, 2, 3, 22], [22, 16, 29, 22], [22, 22, 22, 22]], ([[1, 0, 3, 0], [0, 5, 0, 7], [2, 2, 2, 10], [1, 120, 13, 104]], 22), '')])]),
            ProgramTest('uji.txt\n100\n', 'Introduce el nombre de la imagen: Introduce el valor del borde: ', image = 'boletin04.ficheros/ficheros32/fichero1.txt')
          ]
        ]
        ,
        ['ej33.py',
          [
            ProgramTest('tux.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros33/fichero0.txt', functions = [FunctionTestList('girada_izquierda', [FunctionTest (([[5]],), '', [[5]], ([[5]],), ''), FunctionTest (([[1,10],[10,2]],), '', [[10, 2], [1, 10]], ([[1, 10], [10, 2]],), ''), FunctionTest (([[1,2,3],[4,5,6],[7,8,9]],), '', [[3, 6, 9], [2, 5, 8], [1, 4, 7]], ([[1, 2, 3], [4, 5, 6], [7, 8, 9]],), ''), FunctionTest (([[1,20],[10,2]],), '', [[20, 2], [1, 10]], ([[1, 20], [10, 2]],), ''), FunctionTest (([[1,2,0],[4,0,6],[0,8,9]],), '', [[0, 6, 9], [2, 0, 8], [1, 4, 0]], ([[1, 2, 0], [4, 0, 6], [0, 8, 9]],), ''), FunctionTest (([[1,2]],), '', [[2], [1]], ([[1, 2]],), ''), FunctionTest (([[1,2,3],[4,5,6]],), '', [[3, 6], [2, 5], [1, 4]], ([[1, 2, 3], [4, 5, 6]],), ''), FunctionTest (([[1,0],[4,0],[8,9]],), '', [[0, 0, 9], [1, 4, 8]], ([[1, 0], [4, 0], [8, 9]],), ''), FunctionTest (([[2,5,7,3,4,8,23,55,12,5,2,3]],), '', [[3], [2], [5], [12], [55], [23], [8], [4], [3], [7], [5], [2]], ([[2, 5, 7, 3, 4, 8, 23, 55, 12, 5, 2, 3]],), ''), FunctionTest (([[2],[5],[7],[3],[4],[8],[23],[55],[12],[5],[2],[3]],), '', [[2, 5, 7, 3, 4, 8, 23, 55, 12, 5, 2, 3]], ([[2], [5], [7], [3], [4], [8], [23], [55], [12], [5], [2], [3]],), '')])]),
            ProgramTest('uji.txt\n', 'Introduce el nombre de la imagen: ', image = 'boletin04.ficheros/ficheros33/fichero1.txt')
          ]
        ]
       ]
